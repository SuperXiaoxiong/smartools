[decompile_tool]
location=/Applications/IntelliJ\ IDEA.app/Contents/plugins/java-decompiler/lib/java-decompiler.jar

[decompile_cfr_tool]
location=/Users/admin/work/workspace/java/jar-decompile/cfr-0.151.jar

[decompile_options]
# 隐藏桥接方法
# rbr=1
# 隐藏合成类成员
# rsy=0
# 反编译内部类
# din=1
# 折叠 1.4 类引用
# dc4=1
# 反编译断言
# das=1
# 隐藏空的超级调用
# hes=1
# 隐藏空的默认构造函数
# hdc=0
# 反编译通用签名
# dgs=0
# 假设返回不抛出异常
# ner=1
# 反编译枚举 
# den=1
# 删除 getClass 调用，当它是限定的 new 语句的一部分时
rgn=0
# 按原样输出数字文字
# lit=1
# 将字符串和字符文字中的非 ASCII 字符编码为 Unicode 转义符
# asc=0
# 将 int 1 解释为 boolean true（解决编译器错误的方法）
# bto=1
# 允许不设置综合属性（解决编译器错误）
# nns=0
# 将无名类型视为 java.lang.Object（解决编译器架构缺陷的方法）
# uto=1
# 从调试信息重建变量名（如果存在）
# udv=1
# 删除空的异常范围
# rer=0
# de-inline finally 结构
# fdi=1
# 每个反编译方法允许的最大处理时间，以秒为单位。0 表示没有上限
mpm=60
# 重命名不明确的（resp. obfuscated）类和类元素
# ren=1
# 实现 IIdentifierRenamer 接口的用户提供的类的全名。它用于确定应重命名哪些类标识符并提供新的标识符名称（请参阅“重命名标识符”）
# urc=-
# 检查 IntelliJ IDEA 特定的 @NotNull 注释，如果找到则删除插入的代码
# inn=1
# 将 lambda 表达式反编译为匿名类
# lac=1
# 定义用于输出的换行符。0 - '\r\n' Windows, 1 - '\n' Unix, 默认是操作系统相关的
nls=1
#（缩进字符串 默认为 3 个空格）
ind=4
# 日志级别，可能的值为 TRACE、INFO、WARN、ERROR
log=INFO
